name: Build

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/Lvellios/openwrt-lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_SCRIPT: diy-part.sh
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Canada/Atlantic
  FILE_NAME: IPQ60xx

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: INIT Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /etc/mysql /etc/php /opt/ghc /usr/local/lib/android 2>/dev/null
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
        sudo -E apt-get -y update
        sudo -E apt-get -y install $(curl -fsSL is.gd/depends_ubuntu_2204)
        sudo -E apt-get -y install rename
        sudo -E apt-get -y install time
        sudo -E apt-get -y install gn
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        df -Th

    - name: CGit Repository
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Install Feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Custom Config
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SCRIPT
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SCRIPT

    - name: Download DL
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile Packages
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check Space Usage
      if: (!cancelled())
      run: df -hT

#    - name: Upload Bin Directory
#      uses: actions/upload-artifact@main
#      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
#      with:
#        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
#        path: openwrt/bin

    - name: Organize Files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload Artifact
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Push Tag
      id: tag
      run: |
        echo "release_tag=$(date +"%Y%m%d%H%M")" >> $GITHUB_OUTPUT

    - name: Upload Files
      id: release
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.FILE_NAME }}
        allowUpdates: true
        tag: ${{ steps.tag.outputs.release_tag }}
        commit: main
        token: ${{ secrets.RELEASES_TOKEN }}
        body: |
          The firmware for IPQ60xx
          ${{ env.useVersionInfo }}
        artifacts: ${{ env.FIRMWARE }}/*
